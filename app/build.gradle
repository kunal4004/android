apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.google.gms.google-services'  // Google Services plugin

android {

    def major = "7"
    def minor = "8"
    def fix = "1"
    def jobNumber = 4001

    def isAppCenter = System.getenv("IS_APP_CENTER").asBoolean()

    dataBinding {
        enabled = true
    }

    compileOptions {
        // Support for Java 8 features
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    flavorDimensions "default"

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig null
            // Set to null to override default debug keystore and defer to the product flavor.
        }
        release {
            lintOptions {
                disable 'MissingTranslation'
                checkReleaseBuilds false
                abortOnError false
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
        }
    }

    defaultConfig {
        applicationId "com.awfs.coordination"
        manifestPlaceholders = [appLabel: "Woolworths", app_links_host: "www.woolworths.co.za"]
        minSdkVersion 22 //Lollipop 5.1
        targetSdkVersion 29
        compileSdkVersion 29
        multiDexEnabled true
        versionName(major + "." + minor + "." + fix)
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode jobNumber
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        dexOptions {
            javaMaxHeapSize "2560M"
        }
    }

    // configs for MS App Center goes here...
    // MS App Center doesn't currently support productFlavors, only supports release/debug.
    if (isAppCenter) {
        def host = System.getenv("WigroupServer_API_URL").toString()
        def hash = System.getenv("WigroupServer_API_HASH").toString()
        def mapsApiKey = System.getenv("MAPS_API_KEY").toString()

        String env = ""

        if (host.contains("-qa") || host.contains("-staging")){
            defaultConfig.applicationIdSuffix = ".qa"
            defaultConfig.manifestPlaceholders = [appLabel: "Woolworths Q", app_links_host: "www-win-qa.woolworths.co.za"]
            env = "QA"
        } else if (host.contains("-staging")){
            jobNumber = 1
        } else{
            //assume prod
            jobNumber = 156
        }

        defaultConfig {
            versionCode jobNumber
            buildConfigField("String", "HOST", '"' + host + '"')
            buildConfigField("String", "SHA1", '"' + hash + '"')
            buildConfigField("String", "ENV", '"' + env + '"')

            resValue "string", "maps_api_key", (mapsApiKey ?: "")
        }
    } else {

        def apiKey = "ANDROID_V" + major + "." + minor
        def secureProps = new Properties()
        if (file("../secure.properties").exists()) {
            file("../secure.properties")?.withInputStream { secureProps.load(it) }
        }

        def productionKeystoreProperties = new Properties()
        file("ProductionKeystore.properties").withInputStream { productionKeystoreProperties.load(it) }

        defaultConfig{
            resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
        }

        signingConfigs {
            woolworths {
                keyAlias productionKeystoreProperties['keyAlias']
                keyPassword productionKeystoreProperties['keyPassword']
                storeFile file(productionKeystoreProperties['storeFile'])
                storePassword productionKeystoreProperties['storePassword']
            }
            woneappQa {
                keyAlias 'woneapp_qa'
                keyPassword 'woneapp_qa'
                storeFile file('key/woneapp_qa-release-key.keystore')
                storePassword 'woneapp_qa'
            }
        }

        productFlavors {
            qa {
                applicationIdSuffix ".qa"
                manifestPlaceholders = [appLabel: "Woolworths Q"]
                buildConfigField("String", "HOST", '"' +  secureProps['URL_QA_' + apiKey] + '"')
                buildConfigField("String", "SHA1", '"' +  secureProps['HASH_QA_' + apiKey] + '"')
                buildConfigField("String", "ENV", '"QA"')
                manifestPlaceholders = [app_links_host: "www-win-qa.woolworths.co.za"]
                signingConfig signingConfigs.woneappQa
            }

            production {
                buildConfigField("String", "HOST", '"' +  secureProps['URL_PROD_' + apiKey] + '"')
                buildConfigField("String", "SHA1", '"' +  secureProps['HASH_PROD_' + apiKey] + '"')
                buildConfigField("String", "ENV", '""')
                manifestPlaceholders = [app_links_host: "www.woolworths.co.za"]
                signingConfig signingConfigs.woolworths
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-tagmanager:17.0.0'
    implementation 'com.google.android.gms:play-services-analytics:17.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.4'
    implementation 'com.google.firebase:firebase-core:17.5.0'
    implementation 'com.google.firebase:firebase-config:19.2.0'
    implementation 'com.google.firebase:firebase-invites:17.0.0'
    implementation 'com.google.firebase:firebase-perf:19.0.8'
    implementation 'com.google.firebase:firebase-inappmessaging-display-ktx:19.1.0'
    implementation 'com.google.firebase:firebase-inappmessaging-display:19.1.0'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'

    //noinspection GradleCompatible
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.google.android.material:material:1.3.0-alpha03'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.facebook.fresco:fresco:2.0.0'
    implementation 'com.facebook.fresco:animated-gif:2.0.0'
    implementation 'com.facebook.android:facebook-android-sdk:5.1.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'

    implementation(name: 'utils-1.1.8', ext: 'aar')
    implementation(name: 'Logger-1', ext: 'aar')

    implementation 'io.jsonwebtoken:jjwt:0.9.0'
    implementation 'uk.co.chrisjenx:calligraphy:2.2.0'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.daimajia.swipelayout:library:1.2.0'
    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'
    api 'com.google.zxing:core:3.3.3'

    api 'com.google.zxing:android-core:3.3.0'
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    implementation 'me.relex:circleindicator:2.1.0@aar'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    implementation "com.github.skydoves:balloon:1.0.4"
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.deano2390:MaterialShowcaseView:1.2.0'
    implementation 'com.daasuu:BubbleLayout:1.2.0'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:26.1.0')

    implementation 'com.android.volley:volley:1.1.1'
    implementation "com.google.android.gms:play-services-auth-api-phone:17.4.0"
    implementation 'androidx.core:core-ktx:1.3.2'

    implementation "androidx.navigation:navigation-fragment-ktx:2.3.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-rc01'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Amplify core dependency
    implementation 'com.amplifyframework:aws-api:1.3.2'

    // Only specify modules that provide functionality your app will use
    implementation 'com.amplifyframework:aws-auth-cognito:1.3.2'
    implementation 'com.amplifyframework:core:1.3.2'

    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

    testImplementation 'junit:junit:4.13.1'
    testImplementation "org.mockito:mockito-core:3.4.6"
    testImplementation "org.mockito:mockito-inline:2.21.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'android.arch.core:core-testing:1.1.1'

    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation('com.microsoft.appcenter:espresso-test-extension:1.3')
}

apply plugin: 'com.google.gms.google-services'

apply plugin: 'kotlin-android-extensions'
