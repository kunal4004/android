apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'

android {

    def major = "5"
    def minor = "12"
    def fix = "0"

    def jobNumber = 325
    def isAppCenter = System.getenv("IS_APP_CENTER").asBoolean()

    dataBinding {
        enabled = true
    }

    flavorDimensions "default"

    signingConfigs {
        woneappDev {
            keyAlias 'woneapp_dev'
            keyPassword 'woneapp_dev'
            storeFile file('key/woneapp_dev-release-key.keystore')
            storePassword 'woneapp_dev'
        }
        woneappQa {
            keyAlias 'woneapp_qa'
            keyPassword 'woneapp_qa'
            storeFile file('key/woneapp_qa-release-key.keystore')
            storePassword 'woneapp_qa'
        }
        woneappStaging {
            keyAlias 'woneapp_staging'
            keyPassword 'woneapp_staging'
            storeFile file('key/woneapp_staging-release-key.keystore')
            storePassword 'woneapp_staging'
        }
        woolworths {
            keyAlias 'woolworths'
            keyPassword 'H]|{0*[\'C[Y\\jze'
            storeFile file('key/Woolworths.keystore.jks')
            storePassword 'H]|{0*[\'C[Y\\jze'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileSdkVersion 28
    buildTypes {
        debug {
            debuggable true
            signingConfig null
            // Set to null to override default debug keystore and defer to the product flavor.
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
        }
    }

    defaultConfig {
        minSdkVersion 19 //kitkat 4.4
        targetSdkVersion 28
        multiDexEnabled true
        versionName(major + "." + minor + "." + fix)
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode jobNumber
        applicationId "com.awfs.coordination"
        signingConfig signingConfigs.woolworths
        buildConfigField("String", "HOST", '"https://wfs-appserver.wigroup.co/wfs/app/v4"')
        buildConfigField("String", "SHA1", '"e636af4f626cad1b8126a769e5d33c09345b41fe"')
        buildConfigField("String", "ENV", '""')

        dexOptions {
            javaMaxHeapSize "2560M"
        }
    }

    // configs for MS App Center goes here...
    // MS App Center doesn't currently support productFlavors, only supports release/debug.
    if (isAppCenter) {

        def appServerEnv = System.getenv("APP_SERVER_ENV")
        if (appServerEnv == null){
            appServerEnv = "qa"
        }

        if (appServerEnv.equalsIgnoreCase("qa")){
            defaultConfig {
                applicationId "com.awfs.coordination.qa"
                signingConfig signingConfigs.woneappQa
                buildConfigField("String", "HOST", '"https://wfs-appserver-qa.wigroup.co/wfs/app/v4"')
                buildConfigField("String", "SHA1", '"ecd631798df6d366535c3a501908cce136d40087"')
                buildConfigField("String", "ENV", '"QA"')
            }
        }
    }

    else{

        productFlavors {
            dev {
                applicationId "com.awfs.coordination.dev"
                signingConfig signingConfigs.woneappDev
                buildConfigField("String", "HOST", '"https://wfs-appserver-dev.wigroup.co/wfs/app/v4"')
                buildConfigField("String", "SHA1", '"2f8f87cbf5933ea469c0e9c9d0793de4d8fe3744"')
                buildConfigField("String", "ENV", '"DEV"')
            }

            qa {
                applicationId "com.awfs.coordination.qa"
                signingConfig signingConfigs.woneappQa
                buildConfigField("String", "HOST", '"https://wfs-appserver-qa.wigroup.co/wfs/app/v4"')
                buildConfigField("String", "SHA1", '"ecd631798df6d366535c3a501908cce136d40087"')
                buildConfigField("String", "ENV", '"QA"')
            }

            staging {
                applicationId "com.awfs.coordination.staging"
                signingConfig signingConfigs.woneappStaging
                buildConfigField("String", "ENV", '"STAGING"')
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    play {
        serviceAccountEmail = 'gradle-play-publisher@api-8582057611245189702-23971.iam.gserviceaccount.com'
        pk12File = file('api-8582057611245189702-23971-38821af8cacd.p12')

        // ...
        track = 'internal' // Or any of 'rollout', 'beta', 'alpha' or 'internal'
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-gcm:16.1.0'
    implementation 'com.google.android.gms:play-services-tagmanager:16.0.8'
    implementation 'com.google.android.gms:play-services-analytics:16.0.8'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-config:17.0.0'
    implementation 'com.google.firebase:firebase-dynamic-links:17.0.0'
    implementation 'com.google.firebase:firebase-invites:17.0.0'
    implementation 'com.google.firebase:firebase-perf:17.0.2'

    implementation 'com.google.android:flexbox:0.2.5'
    //noinspection GradleCompatible
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.facebook.fresco:fresco:1.12.1'
    implementation 'com.facebook.fresco:animated-gif:1.12.1'
    implementation 'com.facebook.android:facebook-android-sdk:5.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'

    implementation(name: 'utils-1.1.8', ext: 'aar')
    implementation(name: 'Logger-1', ext: 'aar')

    implementation 'io.jsonwebtoken:jjwt:0.7.0'
    implementation 'uk.co.chrisjenx:calligraphy:2.2.0'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.daimajia.swipelayout:library:1.2.0'
    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'
    api 'com.google.zxing:core:3.3.3'

    api 'com.google.zxing:android-core:3.3.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'me.relex:circleindicator:1.2.2@aar'

    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.github.deano2390:MaterialShowcaseView:1.2.0'
    implementation 'com.daasuu:BubbleLayout:1.2.0'

    implementation 'com.android.volley:volley:1.1.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'org.powermock:powermock-core:1.7.0RC2'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0RC2'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC2'

    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation('com.microsoft.appcenter:espresso-test-extension:1.3')
}

apply plugin: 'com.google.gms.google-services'

apply plugin: 'kotlin-android-extensions'
